AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Analyzing sentiment from reviews using AWS Comprehend

Resources:

  SqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: sentiment-analyzer-queue

  SentimentAnalyzerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: sentiment-analyzer
      Handler: src/sentiment_analysis.lambda_handler
      Runtime: python3.8
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SqsQueue.Arn
            BatchSize: 10
      Environment:
        Variables:
          tableName: !Ref DynamoDBTable
      Policies:
      - SQSPollerPolicy:
          QueueName:
            !GetAtt SqsQueue.QueueName
      - ComprehendReadOnly
      - AmazonDynamoDBFullAccess

  CreateSentimentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: create_sentiment.lambda_handler
      Runtime: python3.8
      Events:
        CreateSentiment:
          Type: Api
          Properties:
            Path: /sentiments
            Method: post
      Environment:
        Variables:
          queueName: !Ref SqsQueue
      Policies:
        SQSSendMessagePolicy:
          QueueName: !GetAtt SqsQueue.QueueName

  GetSentimentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: get_sentiments.lambda_handler
      Runtime: python3.8
      Events:
        CreateSentiment:
          Type: Api
          Properties:
            Path: /sentiments
            Method: get
      Environment:
        Variables:
          tableName: !Ref DynamoDBTable
      Policies:
        DynamoDBReadPolicy:
          TableName: !Ref DynamoDBTable

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: sentiments-table
      AttributeDefinitions: 
        - AttributeName: product_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      KeySchema: 
        - AttributeName: product_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  CreateSentimentFunction:
    Description: "API Gateway endpoint URL for Prod stage for Create Sentiment"
    Value: !Sub "POST https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/sentiments/"

  GetSentimentsFunction:
    Description: "API Gateway endpoint URL for Prod stage for GET Sentiments"
    Value: !Sub "GET https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/sentiments/"